#!/usr/bin/python3

import sys, time, signal
from datetime import datetime
from PyQt5.QtWidgets import QApplication
from PyQt5.QtCore import QTimer

class main():
	def __init__(self):
		#exit the program when ctrl c is pressed
		signal.signal(signal.SIGINT, signal.SIG_DFL)

		# Set date on startup
		self.today = datetime.today().date()
		self.done = False

		# Setup the heartbeat timer to run the update function every 100ms
		# 1 second has 1000 milliseconds
		updateTimer = QTimer()
		updateTimer.timeout.connect(self.update)
		updateTimer.start(100)

	def printMinute(self, m):
		print(f'The current even minute is {m}')

	def update(self):
		# this example shows a way to do something one time when an event happens
		minute = datetime.now().minute
		# if the remainder of minute / 2 is equal to 0 and self.done is not True
		if minute % 2 == 0 and not self.done:
			# call the printMinute function and pass the minute to it
			self.printMinute(minute)
			# now set self.done to True so it only happens once
			self.done = True
		# else if the remainder of minute / 2 is not equal to 0 set self.done to False
		elif minute % 2 != 0:
			self.done = False

if __name__ == '__main__':
	app = QApplication(sys.argv)
	gui = main()
	sys.exit(app.exec_())
